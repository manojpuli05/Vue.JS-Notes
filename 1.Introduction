a.What is Vue.js
->It is a JavaScript framework used for building user interfaces, particularly for single-page applications (SPAs).

*Key Features
| Feature                   | Description                                                                  |
| ------------------------- | ---------------------------------------------------------------------------- |
| **Declarative Rendering** | Use HTML-based template syntax to render DOM declaratively.                  |
| **Component-Based**       | Build applications using reusable, encapsulated components.                  |
| **Reactivity System**     | Automatically updates the DOM when data changes.                             |
| **Computed Properties**   | Automatically recalculates values when dependencies change.                  |
| **Directives**            | Built-in (e.g., `v-if`, `v-for`, `v-bind`, `v-model`) and custom directives. |
| **Lightweight & Fast**    | Small bundle size and optimized for performance.                             |
| **Transition Effects**    | Easily apply animations and transitions.                                     |
| **Vue CLI**               | Tool for rapid project scaffolding and configuration.                        |

*Why use Vue.JS.?
A.i.Easy to learn and use
  ii. Lightweight and fast
  iii. Detailed documentation
  iv. Large and active community
  v. Smooth integration with existing projects
  vi. Flexible for small to large-scale applications

*Project Installation
Step:1: npm create vue@latest
Step:2: vue create my-project
Step:3: npm run start --->To run the project application

*Basic Syntax
<!-- HTML -->
<div id="app">
  <h1>{{ message }}</h1>
</div>

<!-- Vue.js -->
<script src="https://cdn.jsdelivr.net/npm/vue@2"></script>
<script>
  new Vue({
    el: '#app',
    data: {
      message: 'Hello Vue!'
    }
  });
</script>

*Project Structure->
->main.js: Mounts the root component and initializes the app.
->App.Vue: The main root component that wraps your app.
->components/: Contains reusable UI pieces (e.g., buttons, cards).
->views/: Route-based page components (e.g., Home, About).
->router/index.js: Manages app navigation using Vue Router.
->store/index.js: Centralized state (using Vuex or Pinia).
->assets/: Static resources like images and styles.
->public/index.html: Base HTML template for the app.

